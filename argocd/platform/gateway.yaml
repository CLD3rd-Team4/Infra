apiVersion: networking.istio.io/v1alpha3
kind: Gateway
metadata:
  name: spring-gateway-gateway
spec:
  selector:
    istio: ingressgateway # use istio default controller
  servers:
  - port:
      number: 80
      name: http
      protocol: HTTP
    hosts:
    - "api.mapzip.shop"
---
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: spring-gateway-vs
spec:
  hosts:
  - "api.mapzip.shop"
  gateways:
  - spring-gateway-gateway
  http:
  - route:
    - destination:
        host: gateway.service-platform.svc.cluster.local
        port:
          number: 8080
    retries:
      attempts: 5
      perTryTimeout: 30s
    corsPolicy:
      allowOrigin:
      - "https://www.mapzip.shop"
      allowMethods:
      - GET
      - POST
      - PUT
      - DELETE
      - OPTIONS
      allowHeaders:
      - Content-Type
      - Authorization
      - X-Requested-With
      - Accept
      - Origin
      maxAge: "2h"
      allowCredentials: true
---
apiVersion: v1
kind: Service
metadata:
  name: gateway
spec:
  selector:
    app.kubernetes.io/name: spring-gateway
  type: ClusterIP
  ports:
    - name: http
      protocol: TCP
      port: 8080
      targetPort: 8080
---

apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: spring-gateway-hpa
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: spring-gateway-deployment
  minReplicas: 1
  maxReplicas: 5
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 40
    - type: Resource
      resource:
        name: memory
        target:
          type: Utilization
          averageUtilization: 80

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: spring-gateway-deployment
spec:
  progressDeadlineSeconds: 150  # 150초 동안 준비 안 되면 배포 실패 처리
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 2
      maxUnavailable: 0
  selector:
    matchLabels:
      app.kubernetes.io/name: spring-gateway
  template:
    metadata:
      labels:
        app.kubernetes.io/name: spring-gateway
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
        prometheus.io/path: "/actuator/prometheus"
    spec:
      containers:
      - name: spring-gateway-container
        image: 061039804626.dkr.ecr.ap-northeast-2.amazonaws.com/mapzip-dev-ecr-gateway:9429369
        ports:
        - protocol: TCP
          containerPort: 8080
        
        resources:
          requests:
            cpu: "100m"
            memory: "500Mi"
          limits:
            cpu: "300m"
            memory: "700Mi"

        livenessProbe:
          httpGet:
            path: /actuator/health/liveness
            port: 8080
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        
        readinessProbe:
          httpGet:
            path: /actuator/health/readiness
            port: 8080
          initialDelaySeconds: 60
          periodSeconds: 5
          timeoutSeconds: 3
          successThreshold: 1
